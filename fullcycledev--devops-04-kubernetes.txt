== Full Cycle Development ==

--> http://portal.code.education 

DevOps


= [ Kubernetes ] =

== 1. Introdução ao Kubernetes ==

Orquestrador de contêineres.

-- O que é o Kubernetes (https://kubernetes.io/pt/)
"Kubernetes (K8s) é um produto Open Source utilizado para automatizar a implantação, o dimensionamento e o gerenciamento de aplicativos em contêiner."

-- De onde veio?

1. Google
1.1. Borg
1.2. Omega
1.3. Kubernetes

-- Pontos importantes

1. Kubernetes é disponibilizado através de um conjunto de APIs
2. Normalmente acessamos a API usando a CLI: kubectl
3. Tudo é baseado em estado. Você configura o estado de cada objeto
4. Kubernetes Master  (Cluster)
4.1. Kube-apiserver
4.2. Kube-controller-manager
4.3. Kube-scheduler
5. Outros Nodes:
5.1. Kubelet
5.2. Kubeproxy

-- Dinâmica "superficial"

1. Cluster: Conjunto de máquinas (Nodes)
1.1. Cada máquina possui uma quantidde de vCPU e Memória

2. Pods: Unidade que contém os contêineres provisionados
2.1. O Pod representa os processos rodando no cluster
2.2. Pode-se ter mais de um contêiner em cada Pod, mas são raras as vezes em que isso se torna necessário.

3. Deployment: outro tipo de objeto que tem o objetivo de aprovisionar os pods
3.1. Para aprovisionar os pods, ele precisa saber quantas réplicas serão disponibilizadas, e isso é informado através dos ReplicaSets (quantas réplicas de cada set)

Ex.:  
B = Backend ==> 3 réplicas (ReplicaSets)
F = Frontend ==> 2 réplicas (ReplicaSets)

Caso o número exigido por algum ReplicaSet aumente e não haja recursos computacionais disponíveis, o K8s deixará a execução pendente até que surjam as condições adequadas.

Caso isso ocorra e haja outro Node disponível, os pods serão criados no outro Node, desde que haja recursos disponíveis.







== 2. Entendendo Services ==

Interface de comunicação entre o mundo externo e os pods.


-- Services --
É uma forma de agregar um conjunto de pods para então implementar políticas de visibilidade.


-- Tipos de Services - Principais --
- ClusterIP
- NodePort

-- Services - Cluster IP --
[tráfego] --> [Proxy]  --> [Service] --> [distrbui para Pods]





== 3. Instalando Minikube ==
== 4. Criand nosso primeiro Pod ==
== 5. Trabalhando com Deployments ==
== 6. Criando nosso Service ==
== 7. Escalando Pods ==
== 8. Trabalhando com ConfigMap ==
== 9. Configurando Mysql do Zero ==
== 10. Montando volume persistente no Mysql ==
== 11. Trabalhando com Secret no Mysql ==
== 12. Criando Mysql Service  ==